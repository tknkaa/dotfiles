[language-server]
astro-ls = { command = "astro-ls", args = ["--stdio"] }
biome = { command = "biome", args = ["lsp-proxy"] }
rust-analyzer.config = { checkOnSave.command = "clippy" }
tailwind = { command = "tailwindcss-language-server", args = ["--stdio"] }
vscode-css = { command = "vscode-css-language-server", args = ["--stdio"] }
ts = { command = "typescript-language-server", args = ["--stdio"] }
js = { command = "javascript-typescript-langserver", args = ["--stdio"] }
deno = { command = "deno", args = ["lsp"] }
lsp-ai.command = "lsp-ai"
helix-gpt.command = "helix-gpt"

[language-server.lsp-ai.config.models.model1]
type = "open_ai"
chat_endpoint = "https://api.groq.com/openai/v1/chat/completions"
model = "llama3-70b-8192"
max_requests_per_second = 1
auth_token_env_var_name = "GROQ_API_KEY"

[[language]]
name = "nix"
auto-format = true
formatter = { command = "alejandra", args = ["-", "--quiet"] }
language-servers = ["nil", "nixd"]

[[language]]
name = "rust"
auto-format = true
language-servers = ["rust-analyzer"]

[[language]]
name = "clangd"
auto-format = true
scope = ".c"
file-types = ["C"]

[[language]]
name = "fsharp"
auto-format = true

[[language]]
name = "toml"
auto-format = true
formatter.command = "taplo"
formatter.args = ["fmt", "-"]


[[langugage]]
name = "go"
auto-format = true

[[langugage]]
name = "gleam"
auto-format = true


[[language]]
name = "markdown"
auto-format = true

[[language]]
name = "mdx"
file-types = ["mdx"]
scope = ".mdx"
language-servers = ["markdown-oxide"]


[[language]]
name = "html"
language-servers = ["emmet-ls", "tailwind", "vscode-html-language-server"]

[[language]]
name = "css"
file-types = ["css", "scss", "less"]
language-servers = ["vscode-css-language-server", "tailwind"]

[[language]]
name = "less"
scope = "source.less"
file-types = ["less"]
language-servers = ["vscode-css-language-server"]
grammar = "css"

[[language]]
name = "javascript"
auto-format = true
language-servers = ["ts", "js"]

[[language]]
name = "typescript"
auto-format = true
formatter = { command = "biome", args = ["format", "--stdin-file-path=a.ts"] }
language-servers = [
  # "lsp-ai",
  { name = "ts", except-features = ["format"] },
  { name = "biome", except-features = ["format"] },
]

[[language]]
name = "tsx"
auto-format = true
language-servers = ["biome", "emmet-ls", "ts", "tailwind"]

[[language]]
name = "svelte"
auto-format = true
# formatter = { command = "deno", args = ["fmt", "-"] }
language-servers = ["emmet-ls", "tailwind", "svelteserver", "deno", "ts"]

[[language]]
name = "astro"
auto-format = true
scope = "source.astro"
injection-regex = "astro"
file-types = ["astro"]
roots = ["package.json", "astro.config.mjs"]
language-servers = ["tailwind", "astro-ls"]

[[language]]
name = "json"
formatter = { command = "fixjson" }
[[language]]
name = "jsonc"
formatter = { command = "biome", args = [
  "format",
  "--stdin-file-path",
  "a.json",
] }
[[language]]
name = "typst"
auto-format = true
formatter = { command = "typstyle", args = [] }
[[language]]
name = "elixir"
auto-format = true
formatter = { command = "mix", args = ["format", "-"] }
[[language]]
name = "heex"
auto-format = true
formatter = { command = "mix", args = [
  "format",
  "--stdin-filename",
  "a.heex",
  "-",
] }
